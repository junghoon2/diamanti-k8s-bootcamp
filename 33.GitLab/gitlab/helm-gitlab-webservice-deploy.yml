apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    meta.helm.sh/release-name: gitlab
    meta.helm.sh/release-namespace: gitlab
  creationTimestamp: "2020-11-01T19:08:45Z"
  generation: 2
  labels:
    app: webservice
    app.kubernetes.io/managed-by: Helm
    chart: webservice-4.5.1
    heritage: Helm
    release: gitlab
  name: gitlab-webservice
  namespace: gitlab
  resourceVersion: "8494083"
  selfLink: /apis/apps/v1/namespaces/gitlab/deployments/gitlab-webservice
  uid: b5f61dd4-7f4f-42bc-b261-a53c3668cda8
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: webservice
      release: gitlab
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: b0ccdfd94d2d6ffb46e3c6b370f33074fa931c234addea7ed71743efd413c1fb
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        gitlab.com/prometheus_path: /-/metrics
        gitlab.com/prometheus_port: "8080"
        gitlab.com/prometheus_scrape: "true"
        prometheus.io/path: /-/metrics
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
        diamanti.com/endpoint0: '{"network":"blue","perfTier":"high"}'
      creationTimestamp: null
      labels:
        app: webservice
        release: gitlab
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: webservice
                  release: gitlab
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - env:
        - name: GITLAB_WEBSERVER
          value: puma
        - name: TMPDIR
          value: /tmp/gitlab
        - name: GITALY_FEATURE_DEFAULT_ON
          value: "1"
        - name: CONFIG_TEMPLATE_DIRECTORY
          value: /var/opt/gitlab/templates
        - name: CONFIG_DIRECTORY
          value: /srv/gitlab/config
        - name: prometheus_multiproc_dir
          value: /metrics
        - name: ENABLE_BOOTSNAP
          value: "1"
        - name: WORKER_PROCESSES
          value: "2"
        - name: WORKER_TIMEOUT
          value: "60"
        - name: INTERNAL_PORT
          value: "8080"
        - name: PUMA_THREADS_MIN
          value: "4"
        - name: PUMA_THREADS_MAX
          value: "4"
        - name: PUMA_WORKER_MAX_MEMORY
          value: "1024"
        - name: DISABLE_PUMA_WORKER_KILLER
          value: "false"
        - name: GITLAB_TRACING_URL
        - name: WORKHORSE_ARCHIVE_CACHE_DISABLED
          value: "true"
        image: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ee:v13.5.1
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - pkill -SIGINT -o ruby
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/liveness
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 30
        name: webservice
        ports:
        - containerPort: 8080
          name: webservice
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/readiness
            port: 8080
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        resources:
          requests:
            cpu: 300m
            memory: 1500M
          limits:
            cpu: "4"
            memory: 16Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /metrics
          name: webservice-metrics
        - mountPath: /var/opt/gitlab/templates
          name: webservice-config
        - mountPath: /etc/gitlab
          name: webservice-secrets
          readOnly: true
        - mountPath: /srv/gitlab/config/secrets.yml
          name: webservice-secrets
          subPath: rails-secrets/secrets.yml
        - mountPath: /srv/gitlab/config/initializers/smtp_settings.rb
          name: webservice-config
          subPath: smtp_settings.rb
        - mountPath: /srv/gitlab/INSTALLATION_TYPE
          name: webservice-config
          subPath: installation_type
        - mountPath: /srv/gitlab/public/uploads/tmp
          name: shared-upload-directory
        - mountPath: /tmp
          name: shared-tmp
        - mountPath: /etc/ssl/certs/
          name: etc-ssl-certs
          readOnly: true
      - env:
        - name: TMPDIR
          value: /tmp/gitlab
        - name: GITLAB_WORKHORSE_EXTRA_ARGS
        - name: GITLAB_WORKHORSE_LISTEN_PORT
          value: "8181"
        - name: GITLAB_WORKHORSE_LOG_FORMAT
          value: json
        - name: CONFIG_TEMPLATE_DIRECTORY
          value: /var/opt/gitlab/templates
        - name: CONFIG_DIRECTORY
          value: /srv/gitlab/config
        image: registry.gitlab.com/gitlab-org/build/cng/gitlab-workhorse-ee:v13.5.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /scripts/healthcheck
          failureThreshold: 3
          initialDelaySeconds: 20
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 30
        name: gitlab-workhorse
        ports:
        - containerPort: 8181
          name: workhorse
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /scripts/healthcheck
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        resources:
          requests:
            cpu: 100m
            memory: 100M
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/opt/gitlab/templates
          name: workhorse-config
        - mountPath: /etc/gitlab
          name: workhorse-secrets
          readOnly: true
        - mountPath: /srv/gitlab/public/uploads/tmp
          name: shared-upload-directory
        - mountPath: /tmp
          name: shared-tmp
        - mountPath: /etc/ssl/certs/
          name: etc-ssl-certs
          readOnly: true
      dnsPolicy: ClusterFirst
      initContainers:
      - image: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates:20171114-r3
        imagePullPolicy: IfNotPresent
        name: certificates
        resources:
          requests:
            cpu: 50m
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/ssl/certs
          name: etc-ssl-certs
      - args:
        - -c
        - sh -x /config-webservice/configure ; sh -x /config-workhorse/configure ;
          mkdir -p -m 3770 /tmp/gitlab
        command:
        - sh
        image: busybox:latest
        imagePullPolicy: Always
        name: configure
        resources:
          requests:
            cpu: 50m
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /config-webservice
          name: webservice-config
          readOnly: true
        - mountPath: /config-workhorse
          name: workhorse-config
          readOnly: true
        - mountPath: /init-config
          name: init-webservice-secrets
          readOnly: true
        - mountPath: /init-secrets
          name: webservice-secrets
        - mountPath: /init-secrets-workhorse
          name: workhorse-secrets
        - mountPath: /tmp
          name: shared-tmp
      - args:
        - /scripts/wait-for-deps
        env:
        - name: GITALY_FEATURE_DEFAULT_ON
          value: "1"
        - name: CONFIG_TEMPLATE_DIRECTORY
          value: /var/opt/gitlab/templates
        - name: CONFIG_DIRECTORY
          value: /srv/gitlab/config
        - name: WORKHORSE_ARCHIVE_CACHE_DISABLED
          value: "1"
        - name: ENABLE_BOOTSNAP
          value: "1"
        image: registry.gitlab.com/gitlab-org/build/cng/gitlab-webservice-ee:v13.5.1
        imagePullPolicy: IfNotPresent
        name: dependencies
        resources:
          requests:
            cpu: 50m
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/opt/gitlab/templates
          name: webservice-config
        - mountPath: /etc/gitlab
          name: webservice-secrets
          readOnly: true
        - mountPath: /srv/gitlab/config/secrets.yml
          name: webservice-secrets
          readOnly: true
          subPath: rails-secrets/secrets.yml
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: shared-tmp
      - emptyDir:
          medium: Memory
        name: webservice-metrics
      - configMap:
          defaultMode: 420
          name: gitlab-webservice
        name: webservice-config
      - configMap:
          defaultMode: 420
          name: gitlab-workhorse-config
        name: workhorse-config
      - name: init-webservice-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: secrets.yml
                path: rails-secrets/secrets.yml
              name: gitlab-rails-secret
          - secret:
              items:
              - key: secret
                path: shell/.gitlab_shell_secret
              name: gitlab-gitlab-shell-secret
          - secret:
              items:
              - key: token
                path: gitaly/gitaly_token
              name: gitlab-gitaly-secret
          - secret:
              items:
              - key: secret
                path: redis/redis-password
              name: gitlab-redis-secret
          - secret:
              items:
              - key: postgresql-password
                path: postgres/psql-password
              name: gitlab-postgresql-password
          - secret:
              items:
              - key: registry-auth.key
                path: registry/gitlab-registry.key
              name: gitlab-registry-secret
          - secret:
              items:
              - key: shared_secret
                path: gitlab-workhorse/secret
              name: gitlab-gitlab-workhorse-secret
          - secret:
              items:
              - key: accesskey
                path: minio/accesskey
              - key: secretkey
                path: minio/secretkey
              name: gitlab-minio-secret
      - emptyDir:
          medium: Memory
        name: webservice-secrets
      - emptyDir:
          medium: Memory
        name: workhorse-secrets
      - emptyDir: {}
        name: shared-upload-directory
      - emptyDir:
          medium: Memory
        name: etc-ssl-certs
status:
  conditions:
  - lastTransitionTime: "2020-11-01T19:08:46Z"
    lastUpdateTime: "2020-11-01T19:08:46Z"
    message: Deployment does not have minimum availability.
    reason: MinimumReplicasUnavailable
    status: "False"
    type: Available
  - lastTransitionTime: "2020-11-01T19:08:45Z"
    lastUpdateTime: "2020-11-01T19:09:04Z"
    message: ReplicaSet "gitlab-webservice-5bcb466844" is progressing.
    reason: ReplicaSetUpdated
    status: "True"
    type: Progressing
  observedGeneration: 2
  replicas: 2
  unavailableReplicas: 2
  updatedReplicas: 2
