apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  creationTimestamp: "2020-10-29T19:37:08Z"
  generation: 1
  labels:
    app: promtail
    chart: promtail-2.0.0
    heritage: Tiller
    release: promtail
  name: promtail
  namespace: loki-stack
  resourceVersion: "32056599"
  selfLink: /apis/extensions/v1beta1/namespaces/loki-stack/daemonsets/promtail
  uid: c68a47fc-bfb0-442b-8514-bf595b0b5ccf
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: promtail
      release: promtail
  template:
    metadata:
      annotations:
        checksum/config: b8d98c51b73775d4c541f91117bfa0ed3a5cad7476b5116416bf6f7fa341c48c
        prometheus.io/port: http-metrics
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        app: promtail
        release: promtail
    spec:
      affinity: {}
      containers:
      - args:
        - -config.file=/etc/promtail/promtail.yaml
        - -client.url=http://promtail-loki:3100/loki/api/v1/push
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        image: grafana/promtail:2.0.0
        imagePullPolicy: IfNotPresent
        name: promtail
        ports:
        - containerPort: 3101
          name: http-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /ready
            port: http-metrics
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          readOnlyRootFilesystem: true
          runAsGroup: 0
          runAsUser: 0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/promtail
          name: config
        - mountPath: /run/promtail
          name: run
        - mountPath: /var/lib/docker/containers
          name: docker
          readOnly: true
        - mountPath: /var/log/pods
          name: pods
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: promtail
      serviceAccountName: promtail
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      volumes:
      - configMap:
          defaultMode: 420
          name: promtail
        name: config
      - hostPath:
          path: /run/promtail
          type: ""
        name: run
      - hostPath:
          path: /var/lib/docker/containers
          type: ""
        name: docker
      - hostPath:
          path: /var/log/pods
          type: ""
        name: pods
  templateGeneration: 1
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
status:
  currentNumberScheduled: 3
  desiredNumberScheduled: 3
  numberMisscheduled: 0
  numberReady: 0
  numberUnavailable: 3
  observedGeneration: 1
  updatedNumberScheduled: 3
