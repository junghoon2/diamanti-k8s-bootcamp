apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-server-conf
  labels:
    name: prometheus-server-conf
  namespace: monitoring
data:
  prometheus.rules: |-
    groups:
    - name: container memory alert
      rules:
      - alert: container memory usage rate is very high( > 55%)
        expr: sum(container_memory_working_set_bytes{pod!="", name=""})/ sum (kube_node_status_allocatable_memory_bytes) * 100 > 55
        for: 1m
        labels:
          severity: fatal
        annotations:
          summary: High Memory Usage on 
          identifier: ""
          description: " Memory Usage: "
    - name: container CPU alert
      rules:
      - alert: container CPU usage rate is very high( > 10%)
        expr: sum (rate (container_cpu_usage_seconds_total{pod!=""}[1m])) / sum (machine_cpu_cores) * 100 > 10
        for: 1m
        labels:
          severity: fatal
        annotations:
          summary: High Cpu Usage
  prometheus.yml: |-
    global:
      scrape_interval: 5s
      evaluation_interval: 5s
    rule_files:
      - /etc/prometheus/prometheus.rules
    alerting:
      alertmanagers:
      - scheme: http
        static_configs:
        - targets:
          - "alertmanager.monitoring.svc:9093"

    scrape_configs:
      - job_name: 'kubernetes-apiservers'

        kubernetes_sd_configs:
        - role: endpoints
        scheme: https

        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https

      # - job_name: 'kubernetes-nodes'

      #   scheme: https

      #   tls_config:
      #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      #   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      #   kubernetes_sd_configs:
      #   - role: node

      #   relabel_configs:
      #   - action: labelmap
      #     regex: __meta_kubernetes_node_label_(.+)
      #   - target_label: __address__
      #     replacement: kubernetes.default.svc:443
      #   - source_labels: [__meta_kubernetes_node_name]
      #     regex: (.+)
      #     target_label: __metrics_path__
      #     replacement: /api/v1/nodes/${1}/proxy/metrics

      - job_name: node-exporter
        honor_timestamps: true
        scrape_interval: 10s
        scrape_timeout: 10s
        metrics_path: /metrics
        scheme: http
        static_configs:
        - targets:
          - 172.17.16.161:9111
          - 172.17.16.162:9111
          - 172.17.16.163:9111
        relabel_configs:
        - source_labels: [__address__]
          separator: ;
          regex: (.*):.*
          target_label: source
          replacement: ${1}
          action: replace

      - job_name: collectd-exporter
        honor_timestamps: true
        scrape_interval: 10s
        scrape_timeout: 10s
        metrics_path: /metrics
        scheme: http
        static_configs:
        - targets:
          - 172.17.16.161:9103
          - 172.17.16.162:9103
          - 172.17.16.163:9103
        relabel_configs:
        - source_labels: [__address__]
          separator: ;
          regex: (.*):.*
          target_label: source
          replacement: ${1}
          action: replace

      - job_name: cadvisor-exporter
        honor_timestamps: true
        scrape_interval: 10s
        scrape_timeout: 10s
        metrics_path: /metrics
        scheme: http
        static_configs:
        - targets:
          - 10.10.100.71:8080
          - 10.10.100.72:8080
          - 10.10.100.70:8080
        relabel_configs:
        - source_labels: [__address__]
          separator: ;
          regex: (.*):.*
          target_label: source
          replacement: ${1}
          action: replace


      - job_name: 'kubernetes-pods'

        kubernetes_sd_configs:
        - role: pod

        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name

      - job_name: 'kube-state-metrics'
        static_configs:
          - targets: ['kube-state-metrics.kube-system.svc.cluster.local:8080']

      # - job_name: 'kubernetes-cadvisor'

      #   # scheme: https
      #   scheme: http

      #   # tls_config:
      #   #   ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      #   # bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      #   kubernetes_sd_configs:
      #   - role: node

      #   relabel_configs:
      #   - action: labelmap
      #     regex: __meta_kubernetes_node_label_(.+)
      #   - target_label: __address__
      #     replacement: kubernetes.default.svc:443
      #   - source_labels: [__meta_kubernetes_node_name]
      #     regex: (.+)
      #     target_label: __metrics_path__
      #     replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

      # - job_name: 'kubernetes-cadvisor'

      #   # Default to scraping over https. If required, just disable this or change to
      #   # `http`.
      #   scheme: http

      #   # Starting Kubernetes 1.7.3 the cAdvisor metrics are under /metrics/cadvisor.
      #   # Kubernetes CIS Benchmark recommends against enabling the insecure HTTP
      #   # servers of Kubernetes, therefore the cAdvisor metrics on the secure handler
      #   # are used.
      #   metrics_path: /metrics/cadvisor

      #   # This TLS & bearer token file config is used to connect to the actual scrape
      #   # endpoints for cluster components. This is separate to discovery auth
      #   # configuration because discovery & scraping are two separate concerns in
      #   # Prometheus. The discovery auth config is automatic if Prometheus runs inside
      #   # the cluster. Otherwise, more config options have to be provided within the
      #   # <kubernetes_sd_config>.
      #   # tls_config:
      #   #   ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      #   #   # If your node certificates are self-signed or use a different CA to the
      #   #   # master CA, then disable certificate verification below. Note that
      #   #   # certificate verification is an integral part of a secure infrastructure
      #   #   # so this should only be disabled in a controlled environment. You can
      #   #   # disable certificate verification by uncommenting the line below.
      #   #   #
      #   #   # insecure_skip_verify: true
      #   # bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      #   kubernetes_sd_configs:
      #   - role: node

      #   relabel_configs:
      #   - action: labelmap
      #     regex: __meta_kubernetes_node_label_(.+)

      - job_name: 'kubernetes-service-endpoints'

        kubernetes_sd_configs:
        - role: endpoints

        relabel_configs:
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
          action: replace
          target_label: __scheme__
          regex: (https?)
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
          action: replace
          target_label: __address__
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_service_name]
          action: replace
          target_label: kubernetes_name
