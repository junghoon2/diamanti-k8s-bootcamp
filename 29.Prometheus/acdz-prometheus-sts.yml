apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"labels":{"diamanti.com/app":"prometheus","diamanti.com/cluster-service":"true","version":"prometheus-v1.0"},"name":"prometheus-v1","namespace":"diamanti-system"},"spec":{"podManagementPolicy":"Parallel","replicas":3,"revisionHistoryLimit":10,"selector":{"matchLabels":{"diamanti.com/app":"prometheus"}},"serviceName":"prometheus","template":{"metadata":{"annotations":{"diamanti.com/endpoint":"none"},"creationTimestamp":null,"labels":{"diamanti.com/app":"prometheus","diamanti.com/cluster-service":"true","version":"prometheus-v1.0"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.io/hostname","operator":"In","values":["adzdia02","adzdia01","adzdia03"]}]}]}},"podAntiAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"labelSelector":{"matchExpressions":[{"key":"diamanti.com/app","operator":"In","values":["prometheus"]}]},"topologyKey":"kubernetes.io/hostname"}]}},"containers":[{"command":["sh","-c","/bin/prometheus --config.file=/etc/prometheus/config/prometheus.yml --storage.tsdb.retention.time=10d --storage.tsdb.retention=10d --storage.tsdb.no-lockfile --storage.tsdb.path=/prometheus --web.enable-lifecycle --web.console.libraries=/usr/share/prometheus/console_libraries --web.console.templates=/usr/share/prometheus/consoles"],"image":"quay.io/prometheus/prometheus:v2.10.0","imagePullPolicy":"IfNotPresent","name":"prometheus","resources":{"limits":{"memory":"1Gi"}},"securityContext":{"privileged":true,"runAsUser":1000},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/etc/prometheus/config","name":"config-volume","readOnly":true},{"mountPath":"/prometheus","name":"prometheus-persistent-storage"}]}],"dnsPolicy":"ClusterFirst","hostNetwork":true,"restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"serviceAccount":"monitoring-system","serviceAccountName":"monitoring-system","terminationGracePeriodSeconds":30,"volumes":[{"hostPath":{"path":"/etc/diamanti/prometheus","type":""},"name":"config-volume"},{"hostPath":{"path":"/var/lib/diamanti/stats","type":""},"name":"prometheus-persistent-storage"}]}},"updateStrategy":{"rollingUpdate":{"partition":0},"type":"RollingUpdate"}}}
  creationTimestamp: "2020-08-10T07:01:59Z"
  generation: 3
  labels:
    diamanti.com/app: prometheus
    diamanti.com/cluster-service: "true"
    version: prometheus-v1.0
  name: prometheus-v1
  namespace: diamanti-system
  resourceVersion: "9892107"
  selfLink: /apis/apps/v1/namespaces/diamanti-system/statefulsets/prometheus-v1
  uid: 51d12888-fedb-46e3-b312-58e14d267a6b
spec:
  podManagementPolicy: Parallel
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      diamanti.com/app: prometheus
  serviceName: prometheus
  template:
    metadata:
      annotations:
        diamanti.com/endpoint: none
      labels:
        diamanti.com/app: prometheus
        diamanti.com/cluster-service: "true"
        version: prometheus-v1.0
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - adzdia02
                - adzdia01
                - adzdia03
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: diamanti.com/app
                operator: In
                values:
                - prometheus
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - sh
        - -c
        - /bin/prometheus --config.file=/etc/prometheus/config/prometheus.yml --storage.tsdb.retention.time=90d
          --storage.tsdb.no-lockfile --storage.tsdb.path=/prometheus --web.enable-lifecycle
          --web.console.libraries=/usr/share/prometheus/console_libraries --web.console.templates=/usr/share/prometheus/consoles
        image: quay.io/prometheus/prometheus:v2.10.0
        imagePullPolicy: IfNotPresent
        name: prometheus
        resources:
          limits:
            memory: 1Gi
        securityContext:
          privileged: true
          runAsUser: 1000
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/prometheus/config
          name: config-volume
          readOnly: true
        - mountPath: /prometheus
          name: prometheus-persistent-storage
      dnsPolicy: ClusterFirst
      hostNetwork: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: monitoring-system
      serviceAccountName: monitoring-system
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /etc/diamanti/prometheus
          type: ""
        name: config-volume
      - hostPath:
          path: /var/lib/diamanti/stats
          type: ""
        name: prometheus-persistent-storage
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
status:
  collisionCount: 0
  currentReplicas: 3
  currentRevision: prometheus-v1-57fd755bc8
  observedGeneration: 3
  readyReplicas: 3
  replicas: 3
  updateRevision: prometheus-v1-57fd755bc8
  updatedReplicas: 3
