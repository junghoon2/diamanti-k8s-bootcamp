apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    diamanti.com/app: prometheus
    diamanti.com/cluster-service: "true"
    version: prometheus-v1.0
  name: prometheus-snap-v1
  namespace: diamanti-system
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      diamanti.com/app: prometheus
  serviceName: prometheus
  template:
    metadata:
      annotations:
        diamanti.com/endpoint: none
      labels:
        diamanti.com/app: prometheus
        diamanti.com/cluster-service: "true"
        version: prometheus-v1.0
    spec:
      # nodeSelector:
      #   kubernetes.io/hostname: dia01
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                # - adzdia02
                # - adzdia01
                # - adzdia03
                - dia01
                - dia02
                - dia03
        # podAntiAffinity:
        #   requiredDuringSchedulingIgnoredDuringExecution:
        #   - labelSelector:
        #       matchExpressions:
        #       - key: diamanti.com/app
        #         operator: In
        #         values:
        #         - prometheus
        #     topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - sh
        - -c
        - /bin/prometheus --config.file=/etc/prometheus/config/prometheus.yml --storage.tsdb.retention.time=180d
          --storage.tsdb.no-lockfile --storage.tsdb.path=/prometheus/snapshots/20200821T014329Z-a82139158f23cbc --web.enable-lifecycle
          --web.console.libraries=/usr/share/prometheus/console_libraries --web.console.templates=/usr/share/prometheus/consoles
        image: quay.io/prometheus/prometheus:v2.10.0
        imagePullPolicy: IfNotPresent
        name: prometheus
        resources:
          limits:
            memory: 1Gi
        securityContext:
          privileged: true
          runAsUser: 1000  # change 1000 to 0 for erros 
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/prometheus/config
          name: config-volume
          readOnly: true
        - mountPath: /prometheus/snapshots
          name: prometheus-persistent-storage
      dnsPolicy: ClusterFirst
      hostNetwork: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: monitoring-system
      serviceAccountName: monitoring-system
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /etc/diamanti/prometheus
          type: ""
        name: config-volume
      - hostPath:
          path: /var/lib/diamanti/stats/snapshots
          type: ""
        name: prometheus-persistent-storage
  # volumeClaimTemplates:
  # - metadata:
  #     name: prometheus-persistent-storage 
  #   spec:
  #     accessModes:
  #     - ReadWriteOnce
  #     resources:
  #       requests:
  #         storage: 400Gi
  #     storageClassName: medium
  #     volumeMode: Filesystem
